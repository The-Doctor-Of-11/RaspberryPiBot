# @bot.command()
# async def cronStat(ctx):
#     """Gets status of currently monitored CRON job"""
#     cron = subprocess.run(["curl https://cronitor.io/api/monitors -u " + storage.cronShork + ":"], shell=True, stdout=subprocess.PIPE).stdout.decode('utf8')
#     jcron = json.loads(cron)
#     jcron = jcron['monitors']
#     jcron = json.loads(jcron)

    # jobName = jcron["monitors"]["name"]
    # status = jcron["monitors"]["passing"]
    # interval = jcron["monitors"]["schedule"]

    # try:
    #     jc = subprocess.run(["curl https://cronitor.io/api/monitors -u " + storage.cronShork + ":"], shell=True, stdout=subprocess.PIPE).stdout.decode('utf8')
    #     response = json.loads(jc)
    #     jsonResponse = response.json()
    #     print(jsonResponse)

    # except HTTPError as http_err:
    #     print(f'HTTP error occurred: {http_err}')
    # except Exception as err:
    #     print(f'Other error occurred: {err}')

    # await ctx.send("```\n Current Cron Status for " + jobName + ": \n\n" + status + "\n Run Schedule: " + interval + " \n```")
    # await ctx.send("```\n" + jcron['name'] + "\n```")